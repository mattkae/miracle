name: miracle-wm
adopt-info: miracle-wm
summary: "miracle-wm: a tiling window manager built on Mir"
description: |
  miracle-wm is a Wayland compositor based off the Mir library
  that provides a tiling-window manager.
confinement: classic
base: core24
version: 0.3.4

platforms:
  amd64:
  arm64:
  armhf:
    
package-repositories:
  - type: apt
    ppa: mir-team/release

apps:
  miracle-wm:
    command: &_command usr/local/bin/miracle-wm
    environment: &_environment
      # Prep for Mir
      MIR_SERVER_PLATFORM_PATH: ${SNAP}/usr/lib/${CRAFT_ARCH_TRIPLET_BUILD_FOR}/mir/server-platform
      __EGL_VENDOR_LIBRARY_DIRS: $SNAP/etc/glvnd/egl_vendor.d:$SNAP/usr/share/glvnd/egl_vendor.d
      LIBGL_DRIVERS_PATH: $SNAP/usr/lib/${CRAFT_ARCH_TRIPLET_BUILD_FOR}/dri
      LIBINPUT_QUIRKS_DIR: ${SNAP}/usr/share/libinput
      PATH: ${SNAP}/bin/:${SNAP}/usr/bin/:${SNAP}/usr/local/bin/:${PATH}
      # For "reasons" this is being set despite this being a classic snap. This overwrites the nonsense
      LD_LIBRARY_PATH: ""

  miracle-wm-sensible-terminal:
    command: usr/local/bin/miracle-wm-sensible-terminal

  miraclemsg:
    command: usr/local/bin/miraclemsg

parts:
  miracle-wm:
    build-attributes:
      - enable-patchelf
    override-pull: |
      craftctl default
      # work around https://github.com/diddlesnaps/snapcraft-multiarch-action/issues/22
      git config --global --add safe.directory ${CRAFT_PART_SRC}
      server_version=`git rev-list --count HEAD`
      mir_version=`LANG=C apt-cache policy mir-graphics-drivers-desktop | sed -rne 's/^\s+Candidate:\s+([^-]*)-.+$/\1/p'`
      craftctl set version=$server_version-mir$mir_version
      if echo $mir_version | grep -e '+dev' -e '~rc' -q; then craftctl set grade=devel; else craftctl set grade=stable; fi
    plugin: cmake
    cmake-parameters:
      - -DSNAP_BUILD=ON
      - -DCMAKE_BUILD_TYPE=Release
    source: .
    build-packages:
      - pkg-config
      - libmiral-dev
      - libmiroil-dev
      - libmircommon-internal-dev
      - libmircommon-dev
      - libmirserver-internal-dev
      - libboost-filesystem-dev
      - libfreetype6-dev
      - libwayland-dev
      - libxkbcommon-dev
      - g++
      - make
      - git
      - libgtest-dev
      - libyaml-cpp-dev
      - libyaml-cpp0.8
      - libglib2.0-dev
      - libglib2.0-0
      - libevdev-dev
      - libevdev2
      - nlohmann-json3-dev
      - libnotify-dev
      - libgles2-mesa-dev
      - libmirrenderer-dev
      - libmirwayland-dev
      - libjson-c-dev
    stage-packages:
      - libmiral7
      - libmiroil5
      - mir-graphics-drivers-desktop
      - mir-graphics-drivers-nvidia
      - pcre2-utils
      - libnotify4
    prime:
      - -lib/udev
      - -usr/doc
      - -usr/doc-base
      - -usr/share/applications
      - -usr/share/apport
      - -usr/share/bug
      - -usr/share/doc
      - -usr/share/doc-base
      - -usr/share/icons
      - -usr/share/libdrm
      - -usr/share/libwacom
      - -usr/share/lintian
      - -usr/share/man
      - -usr/share/pkgconfig

  session:
    plugin: dump
    source: session

  mesa-patchelf:
    build-attributes:
      - enable-patchelf
    plugin: nil
    stage-packages:
    - libgl1-mesa-dri
    - libtinfo6
    # included in this part because they try to pull in mesa bits
    - xwayland
    stage:
      # The libraries in .../dri need no-patchelf, so they come from the mesa-unpatched part
      - -usr/lib/${CRAFT_ARCH_TRIPLET_BUILD_FOR}/dri

  mesa-no-patchelf:
    plugin: nil
    stage-packages:
      - libgl1-mesa-dri
    build-attributes:
      - no-patchelf # Otherwise snapcraft may strip the build ID and cause the driver to crash
    stage:
      # Only the libraries in .../dri need to not be patched, the rest come from the mesa part
      - usr/lib/${CRAFT_ARCH_TRIPLET_BUILD_FOR}/dri
